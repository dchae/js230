"use strict";

// 1.
async function asyncDownloadFile() {
  console.log("Downloading file...");
  let file = await new Promise((resolve) => {
    setTimeout(() => resolve("Download complete!"), 1500);
  });
  console.log(file);
}

// asyncDownloadFile();

// 2.
// function loadData() {
//   return new Promise((resolve, reject) => {
//     setTimeout(() => {
//       if (Math.random() > 0.5) {
//         resolve("Data loaded");
//       } else {
//         reject("Network error");
//       }
//     }, 1000);
//   });
// }

async function loadData() {
  try {
    let msg = await new Promise((resolve, reject) => {
      setTimeout(() => {
        if (Math.random() > 0.5) {
          resolve("Data loaded");
        } else {
          reject("Network error");
        }
      }, 1000);
    });
    console.log(msg);
  } catch (e) {
    console.error(e);
  }
}

// loadData();

// 3.
async function fetchResource(url) {
  try {
    // const response = await fetch(url);
    // const parsed = await response.json();
    const parsed = await fetch(url).then((res) => res.json());
    console.log(parsed);
  } catch {
    console.error("Failed to load resource");
  }

  console.log("Resource fetch attempt made");
}

// // Example usage:
// fetchResource("https://jsonplaceholder.typicode.com/todos/1");
// // Logs fetched data, then "Resource fetch attempt made"
// fetchResource("invalidUrl");
// // Logs "Failed to load resource", then "Resource fetch attempt made"

// 4.
async function fetchUserProfile(id) {
  try {
    let profile = await fetch(
      `https://jsonplaceholder.typicode.com/users/${id}`,
    );
    profile.then((res) => console.log(res.json()), console.error);

    let posts = await fetch(
      `https://jsonplaceholder.typicode.com/users/${1}/posts`,
    ).then((res) => console.log(res.json()), console.error);

    let todos = await fetch(
      `https://jsonplaceholder.typicode.com/users/${1}/todos`,
    ).then((res) => console.log(res.json()), console.error);
  } catch (e) {
    console.error(e);
  }
}

// Example usage:
fetchUserProfile(1);
// Logs user profile, posts, and todos. Catches and logs errors at each step if they occur.
